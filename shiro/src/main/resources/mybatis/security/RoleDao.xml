<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ming.shiro.dao.security.RoleDao">

    <resultMap id="Roles" type="com.ming.shiro.domain.security.Role">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="create_id" property="createId" jdbcType="BIGINT"/>
        <result column="create_name" property="createName" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_id" property="updateId" jdbcType="BIGINT"/>
        <result column="update_name" property="updateName" jdbcType="VARCHAR"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <collection property="moduleSet" ofType="com.ming.shiro.domain.security.Module">
            <result column="moduleSet.id" property="id"/>
            <result column="moduleSet.name" property="name"/>
            <result column="moduleSet.code" property="code"/>
            <result column="moduleSet.icon" property="icon"/>
            <result column="module.url" property="url"/>
            <result column="module.bgColor" property="bgColor"/>
        </collection>
    </resultMap>

    <sql id="roleColumn">
        id,
        name,
        code,
        create_id createId,
        create_name createName,
        create_date createDate,
        update_id updateId,
        update_name updateName,
        update_date updateDate,
        status,
        remark
    </sql>

    <select id="selectRoleById" resultMap="Roles" parameterType="java.lang.Long">
        SELECT
            r.id,
            r.name,
            r.status,
            r.remark,
            m.id moduleSet.id,
            m.name moduleSet.name,
            m.code moduleSet.code,
            m.icon moduleSet.icon,
            m.url AS "module.url",
            m.bg_color AS "module.bgColor"
        FROM sys_role r
        LEFT JOIN sys_role_module srm ON srm.role_id = r.id
        LEFT JOIN sys_module m ON m.id = srm.module_id
        WHERE r.status = 0
        <if test="id != 0 or id != null">
            AND r.id = #{id}
        </if>
    </select>

    <insert id="saveRoleModules">
        INSERT INTO sys_role_module(
            role_id,
            module_id
        ) VALUES
        <foreach collection="modules" item="m" index="index" separator=",">
            (#{roleId}, #{m.id})
        </foreach>
    </insert>

    <delete id="dropRoleModules" parameterType="java.lang.Long">
        DELETE FROM sys_role_module WHERE role_id = #{roleId}
    </delete>

    <delete id="dropRoleUsers" parameterType="java.lang.Long">
        DELETE FROM sys_user_role WHERE role_id = #{roleId}
    </delete>

</mapper>